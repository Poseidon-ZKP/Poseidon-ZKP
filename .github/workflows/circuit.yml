# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages
name: Node.js CI

on:
  pull_request:
    branches:
      - main                                  # when PR merge to main
    paths :
      - 'packages/circuits/'                  # when circuit file modified in PR
      - 'packages/proof/'                     # when proof file modified in PR

jobs:
  build-circuit:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.17.0]

    steps:
      - name: check out git repo
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Activate Yarn v2
        run: npm i -g corepack && corepack prepare yarn@stable --activate && yarn plugin import workspace-tools
      
      # - name: Cache circom
      #   id: cache-circom
      #   uses: actions/cache@v3
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hash('11') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - if: ${{ steps.cache-circom.outputs.cache-hit != 'true' }}
    
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      - name: Setup Circom global command
        run: |
          git clone https://github.com/iden3/circom.git
          cd circom
          cargo build --release
          cargo install --path circom
          circom --version

      - name: Install dependencies
        run: yarn

      - name: Compile all packages
        run: cd packages/proof; yarn compile; cd - ; cd packages/circuits; yarn compile; cd - # TODO : compile all after fix circuit

      - name: Run all unit tests
        run: cd packages/circuits && yarn test
